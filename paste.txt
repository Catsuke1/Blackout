square onclick

this.element.onclick = () => {
      console.log(this.row, this.col);

      switch (this.type) {
        case SquareTypes.Empty:
          if (game.turnAction === "card") {
            this.setType(SquareTypes.Card);

            game.nextTurn();
          }

          if (game.turnAction === "piece") {
            if (game.figure.wasClicked) {
              if (
                isValidMove(
                  {
                    row: this.row,
                    column: this.col,
                  },
                  game.figure.validMoves
                )
              ) {
                board.movePiece(game.figure.position, {
                  row: this.row,
                  column: this.col,
                });

                board.clearSquares();

                game.nextTurn();
              } else {
                board.clearSquares();

                game.resetPiece();
              }
            }
          }
          break;

        case SquareTypes.Card:
          board.clearSquares();

          game.resetPiece();
          break;

        case SquareTypes.BlackPiece:
          if (game.turnAction === "piece") {
            if (game.turnColor === "black") {
              if (game.figure.wasClicked) {
                board.clearSquares();

                game.resetPiece();
              } else {
                const validMoves = getValidQueenMoves(
                  board.squares,
                  this.row,
                  this.col
                );

                board.showValidMoves(validMoves);

                game.setPiece(this.row, this.col, validMoves);
              }
            }
          }
          break;

        case SquareTypes.WhitePiece:
          if (game.turnAction === "piece") {
            if (game.turnColor === "white") {
              if (game.figure.wasClicked) {
                board.clearSquares();

                game.resetPiece();
              } else {
                const validMoves = getValidQueenMoves(
                  board.squares,
                  this.row,
                  this.col
                );

                board.showValidMoves(validMoves);

                game.setPiece(this.row, this.col, validMoves);
              }
            }
          }
          break;
      }
    };